version: '3.8'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  backend-server:
    driver: ${VOLUMES_DRIVER}
  backend-workers:
    driver: ${VOLUMES_DRIVER}
  caddy:
    driver: ${VOLUMES_DRIVER}
  mariadb:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  webapp:
    driver: ${VOLUMES_DRIVER}
  worker:
    driver: ${VOLUMES_DRIVER}

services:
  backend-server:
    image: judge0/api:${BACKEND_VERSION}
    volumes:
      - ./backend/judge0.conf:/judge0.conf:ro
    privileged: true
    restart: always
    networks:
      - backend

  backend-workers:
    image: judge0/api:${BACKEND_VERSION}
    command: ["./scripts/workers"]
    volumes:
      - ./backend/judge0.conf:/judge0.conf:ro
    privileged: true
    restart: always
    networks:
      - backend

  caddy:
    build:
      context: ./caddy
    volumes:
      - ./caddy:/etc/caddy
      - ${DATA_PATH_HOST}/caddy:/data
    ports:
      - "${CADDY_HTTP_PORT}:80"
      - "${CADDY_HTTPS_PORT}:443"
      - "${CADDY_ADMIN_PORT}:2019"
    networks:
      - frontend
      - backend

  frontend-webapp:
    image: ccr.ccs.tencentyun.com/judge1/webapp:${FRONTEND_VERSION}
    volumes:
      - ./webapp/identity.pfx:/app/identity.pfx:ro
      - ./webapp/appsettings.json:/app/appsettings.json:ro
      - ${DATA_PATH_HOST}/judge-data:/var/www/judge-data
    networks:
      - frontend
      - backend

  frontend-worker:
    image: ccr.ccs.tencentyun.com/judge1/worker:${FRONTEND_VERSION}
    volumes:
      - ./worker/appsettings.json:/app/appsettings.json:ro
      - ${DATA_PATH_HOST}/judge-data:/var/www/judge-data:ro
    networks:
      - backend

  mariadb:
    image: mariadb:10
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/mariadb:/var/lib/mysql
      - ./mariadb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${MARIADB_PORT}:3306"
    networks:
      - backend

  postgres:
    image: postgres:9.6
    env_file: backend/judge0.conf
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data/
    networks:
      - backend

  redis:
    image: redis:4.0
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: backend/judge0.conf
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    networks:
      - backend
