stages:
  - env
  - build
  - release

.setup: &setup
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

env:docker:
  only:
    - tags
  stage: env
  image: reg.nju.edu.cn/psv/dotoj/kaniko:debug
  <<: *setup
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.env"
      --destination "${CI_REGISTRY_IMAGE}/env:latest"

build:webapp:
  only:
    - tags
  stage: build
  image: reg.nju.edu.cn/psv/dotoj/kaniko:debug
  <<: *setup
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.webapp"
      --destination "${CI_REGISTRY_IMAGE}/webapp:${CI_COMMIT_TAG:1}"

build:worker:
  only:
    - tags
  stage: build
  image: reg.nju.edu.cn/psv/dotoj/kaniko:debug
  <<: *setup
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.worker"
      --destination "${CI_REGISTRY_IMAGE}/worker:${CI_COMMIT_TAG:1}"

release:package:
  only:
    - tags
  when: manual
  stage: release
  image: alpine:latest
  before_script:
    - chmod +x ./release.sh
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.nju.edu.cn/g' /etc/apk/repositories
    - apk add zip
  script:
    - ./release.sh package release.zip development-${CI_COMMIT_BRANCH}-${CI_COMMIT_SHA} ${CI_COMMIT_TAG:1}
  artifacts:
    paths:
      - ./release.zip
